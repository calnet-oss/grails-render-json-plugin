/*
 * Copyright (c) 2016-2017, Regents of the University of California and
 * contributors.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
 * IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
 * THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
 * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
//
// This is a Gradle multi-project build.
// See settings.gradle for the subprojects.
//
// The two subprojects are:
// render-json-plugin - The main plugin that is packaged as a jar.
// render-json-test - Tests using the plugin.
//
// We do it this way because it's difficult to have AST transformers and
// integration tests in the same project.
//
// Gradle Multi-Project documentation is here:
// https://docs.gradle.org/current/userguide/multi_project_builds.html
//

buildscript {
    repositories {
        mavenLocal()
        // If using a Maven proxy, put the property settings in
        // ~/.gradle/gradle.properties for default_proxy_url,
        // default_proxy_username and default_proxy_password.
        if (project.hasProperty("default_proxy_url")) {
            maven {
                url project.property("default_proxy_url")
                credentials {
                    username project.property("default_proxy_username")
                    password project.property("default_proxy_password")
                }
            }
        }
        maven { url "https://repo.grails.org/grails/core" }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        //classpath "org.grails.plugins:hibernate5:6.0.4"
    }
}

allprojects {
    apply plugin: 'idea'

    group = 'edu.berkeley.calnet.grails.plugins'
    version = '1.1.2-SNAPSHOT'

    repositories {
        mavenLocal()
        // If using a Maven proxy, put the property settings in
        // ~/.gradle/gradle.properties for default_proxy_url,
        // default_proxy_username and default_proxy_password.
        if (project.hasProperty("default_proxy_url")) {
            maven {
                url project.property("default_proxy_url")
                credentials {
                    username project.property("default_proxy_username")
                    password project.property("default_proxy_password")
                }
            }
        }
        jcenter()
        mavenCentral()
    }
    //dependencies {
    //    compileOnly "org.codehaus.groovy:groovy:2.4.7"
    //}
}

def pdep(String depstr) {
    return (depstr.startsWith(":") ? project(depstr) : depstr)
}
