apply plugin: 'org.grails.grails-plugin'
apply plugin: 'maven-publish'

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compileOnly "org.springframework.boot:spring-boot-starter-logging"
    compileOnly "org.springframework.boot:spring-boot-autoconfigure"
    compileOnly "org.grails:grails-core"

    compileOnly "org.grails:grails-dependencies"
    compileOnly "org.grails:grails-web-boot"

    profile "org.grails.profiles:plugin"
    compileOnly "org.grails:grails-plugin-services"
    compileOnly "org.grails:grails-plugin-domain-class"
    compileOnly "org.grails:grails-plugin-converters"
    testCompile "org.grails:grails-plugin-testing"

    compile 'edu.berkeley.calnet.grails.libs:domain-util:1.1.0-SNAPSHOT'
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
}
// enable if you wish to package this plugin as a standalone application
bootRepackage.enabled = false

task sourceJar(type: Jar) {
    from sourceSets.main.allGroovy
}

// publishing with './gradlew publish'
publish.dependsOn assemble
publishToMavenLocal.dependsOn assemble
publishing {
    publications {
        maven(MavenPublication) {
            artifactId rootProject.name
            from components.java
            artifact sourceJar { classifier "sources" }
        }
    }

    repositories {
        maven {
            // Put the property settings in ~/.gradle/gradle.properties for
            // default_deploy_url, default_deploy_grails_plugin_repo
            // default_deploy_username and default_deploy_password.
            url "${project.property('default_deploy_url')}/${default_deploy_grails_plugin_repo}"
            credentials {
                username project.property("default_deploy_user")
                password project.property("default_deploy_password")
            }
        }
    }
}
